{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"KosmoS platform","text":""},{"location":"#description","title":"Description","text":"<p>One of the results of the KosmoS project is the centralized IoT-Platform made to tailor the needs of evaluators for IoT-based projects.</p> <p>It allows for simple and flexible communication between multiple discrete services and servers used within the projects.</p>"},{"location":"config/","title":"Configuration","text":""},{"location":"config/#configconfigjson","title":"config/config.json","text":"<p>This is the default configuration file for the KosmoS Platform. It can be overriden by starting kosmoslab with the paramaters -c [file] or --config [file] <pre><code>{\n\"pepper\":\"4nedfo7ff34opcgjbsragi1u5n\",\n\"jwt\":\"qleif5j2gr0onu3ukpdsnrrn22\",\n\"sql\":{\n\"url\":\"jdbc:sqlite:./db/database.sqlite\",\n\"maxConnections\":10\n},\n\"webserver\":{\n\"port\":18080\n},\n\"mqtt\":{\n\"port\":1883,\n\"host\":\"0.0.0.0\"\n},\n\"statelog\":{\n\"blacklist\":[\n\n],\n\"whitelist\":[\n\n]\n}\n}\n</code></pre></p>"},{"location":"config/#pepper","title":"pepper","text":"<p>This defines the system pepper that is used, in combination with a per user salt, to hash the password. If it does not exist it will be randomly generated. Please dont change this value manually, this will render your user database useless.</p>"},{"location":"config/#jwt","title":"jwt","text":"<p>This defines the secret used to generate JWT keys. This should never be shared with anyone. Can be changed after, but this renders all currently active tokens as invalid. It will be automatically generated if not present.</p>"},{"location":"config/#sql","title":"sql","text":"<p>Used to set the jdbc url for the database connection, currently optimized for sqlite. Will be automatically set to a sqlite database at ./db/database.sqlite if not present</p>"},{"location":"config/#webserver","title":"webserver","text":"<p>This defines the configuration for the webserver</p>"},{"location":"config/#port","title":"port","text":"<p>The port to listen to - if you use docker please make sure that you update this as well if you want to change the external port. The platform needs knowledge of the actual port for some features.</p>"},{"location":"config/#mqtt","title":"mqtt","text":"<p>Defines the setup for the internal mqtt server.</p>"},{"location":"config/#port_1","title":"port","text":"<p>On which port to listen for new mqtt connections.</p>"},{"location":"config/#host","title":"host","text":"<p>The host to use for the socket.</p>"},{"location":"config/#statelog","title":"statelog","text":"<p>Used to define which states should actually be logged. Checks if a device is in blacklist first, supports wildcards.</p>"},{"location":"config/#blacklist","title":"blacklist","text":"<p>If a device name or a wildcard matching the name is found here the changes will NOT be logged to the database.</p>"},{"location":"config/#whitelist","title":"whitelist","text":"<p>If a device is NOT on the blacklist but matches this list it will be logged - an empty whitelist is the same as a whitelist containing '*'.</p>"},{"location":"features/","title":"Features","text":""},{"location":"features/#json-schema","title":"JSON-Schema","text":"<p>Every Device/Entity can and should have an accompanying JSON-Schema that defines its properties and possible states. The platform validates every input against the JSON-Schema and guarantees that no invalid state can be set. Depending on the source of the request and the given parameters the platform can try to fix erroneous states by removing unwanted properties, changing the type of the parameter, or choosing the next value that would be in the valid range.</p> stable <p>This core feature is stable and heavily tested in production use.</p>"},{"location":"features/#access-control","title":"Access Control","text":"<p>The KosmoS Platform has advanced access control which include access control based specific users, groups and scopes. A user that creates a Device will be the automatically added with admin access for the device.</p> <pre><code>graph TD\n   start(\"User2 tries&lt;br/&gt;to read status&lt;br/&gt;of Lamp17\") --&gt; checkLampExists{\"Lamp17 is a&lt;br&gt;known device\"}\n   checkLampExists --&gt;|No| notFound(\"return NotFound&lt;br&gt;(HTTP404)\"):::fail\n   checkLampExists --&gt;|Yes| checkReadScope{\"Device has&lt;br&gt;a read scope\"} --&gt;|No| returnStatus:::success\n   checkReadScope --&gt;|Yes| checkSystemAdmin{\"User is&lt;br&gt;system admin?\"} --&gt;|Yes| returnStatus\n   checkSystemAdmin --&gt;|No| checkUserScopeAdmin{\"User has&lt;br&gt;admin access&lt;br&gt;to scope\"}\n   checkUserScopeAdmin --&gt;|Yes| returnStatus(\"return status&lt;br&gt;of device\")\n   checkUserScopeAdmin --&gt;|No| checkUserScopeUser{\"User has&lt;br&gt;user access&lt;br&gt;to scope\"}\n   checkUserScopeUser --&gt;|Yes| returnStatus\n   checkUserScopeUser --&gt;|No| forbidden(\"return Forbidden&lt;br&gt;(HTTP403)\"):::fail\n    classDef default font-size:12px;\n    classDef success fill:#087f23,font-size:12px;\n    classDef fail fill:#f44336,font-size:12px;\n\n</code></pre> stable <p>This core feature is stable and heavily tested in production use.</p>"},{"location":"features/#integration-with-smart-environments","title":"Integration with Smart environments","text":"<p>The default integration with existing smart environments is done with Home Assistant. We selected Home Assistant for our default integration because it is considered as the current de facto standard for open-source smart environment controllers.</p> stable <p>This core feature is stable and heavily tested in production use.</p>"},{"location":"features/#live-annotationstatus-website-optimized-for-obs","title":"Live Annotation/Status website optimized for OBS","text":"<p>A website is available to annotate OBS live with changes in user selected entities/devices. See Doc.</p> <p>Examples: Just monitor \"Light.Stehlampe\" <pre><code>http://localhost:18080/obs/live?username=xxx&amp;password=xxx&amp;uuid=light.stehlampe\n</code></pre> Monitor only the sensor.temp_living <pre><code>http://localhost:18080/obs/live?username=xxx&amp;password=xxx&amp;uuid=sensor.temp_living\n</code></pre> Monitor all Lights and Sensors available in HomeAssistant</p> <p><pre><code>http://localhost:18080/obs/live?username=xxx&amp;password=xxx&amp;uuid=light.*,sensor.*\n</code></pre> Everything <pre><code>http://localhost:18080/obs/live?username=xxx&amp;password=xxx&amp;uuid=*\n</code></pre></p> stable <p>This core feature is stable and heavily tested in production use.</p>"},{"location":"features/#kosmos-wizard-of-oz","title":"KosmoS Wizard-of-Oz","text":"<p>The KosmoS platform has a full featured Wizard-of-Oz interface that will be automatically populated but can be (and most likely should be) manually configured to support the features and parameters needed for a given Wizard-of-Oz experiment.</p> <pre><code>[\n{\n\"uuid\": \"ubiact1\",\n\"name\": \"UbiAct\",\n\"body\": [\n{\n\"type\": \"select_prob\",\n\"property2\": \"gesture\",\n\"property\": \"detected_gestures\",\n\"show\": true\n},\n{\n\"type\": \"_displayjson\",\n\"property\": \"detected_gestures\",\n\"show\": true\n},\n{\n\"type\": \"display\",\n\"property\": \"gesture\",\n\"show\": true\n},\n{\n\"type\": \"radio_json\",\n\"property\": \"detected_gestures\",\n\"prefix\": \"set detected_gestures to\",\n\"options\": [\n{\n\"name\": \"hand_closed\",\n\"prob\":  0.81\n},\n{\n\"name\": \"hand_opened\",\n\"prob\": 0.94\n},\n{\n\"name\": \"none\",\n\"prob\": 0.94\n}\n]\n}\n]\n}\n]\n</code></pre> stable <p>The Interface is tested and used in a production environment but lacks some user experience tweaks and fixes.</p>"},{"location":"features/#kosmos-rule-engine-editor-kree","title":"KosmoS Rule Engine Editor (KREE)","text":"<p>KREE is a block-based programming interface on top of the KosmoS Platform. It is based on https://developers.google.com/blockly and generates python code that will be launched directly from the KosmoS Platform</p> needs work <p>It is used in production already but still needs to be updated to the new python library. There also needs to be a wider variety of blocks to use, currently they are limited to generic blocks and some blocks based on the ConText use case.</p>"},{"location":"features/#plugins","title":"Plugins","text":"<p>The platform supports a plugin system based upon pf4j.</p> <p>The repository containing the plugin Interfaces can be found on github.com/kosmos-lab/kosmos-plugins. It currently is rather rudimentary and might change significant in a short amount of time.</p> stable <p>This core feature is stable and heavily tested in production use.</p>"},{"location":"features/#example-plugins","title":"Example Plugins","text":"<p>There are multiple example plugins available</p> <p>github.com/kosmos-lab/kosmos-plugin-web-chat</p> <p>github.com/kosmos-lab/kosmos-plugin-web-example</p>"},{"location":"features/#kiosk-plugin","title":"Kiosk Plugin","text":"<p>This plugin is used in the BAALL to control multiple browserconnected screens. It might also be useful for an example plugin using websockets and regular synchronous requests.</p> <p>github.com/kosmos-lab/kosmos-plugin-web-kiosk</p>"},{"location":"features/#weather-plugin","title":"Weather Plugin","text":"<p>This is a weather plugin using openweathermap.</p> <p>github.com/kosmos-lab/kosmos-plugin-weather</p>"},{"location":"features/#osc-plugin","title":"OSC Plugin","text":"<p>This is a plugin used for OpenSoundControl inside the BAALL.</p> <p>github.com/kosmos-lab/kosmos-plugin-web-osc</p>"},{"location":"features/#reolink-camera-plugin","title":"Reolink camera plugin","text":"<p>To have an example for the camera plugin api the previously integrated camera system for ReoLink was moved to a plugin, you can find it on github.com/kosmos-lab/kosmos-plugin-camera-reolink.</p> needs testing <p>This feature is currently only tested with the Reolink RLC-410-5MP and RLC-520-5MP, but should work for all reolink cameras</p>"},{"location":"features/#camera-integration","title":"Camera Integration","text":"<p>We currently support plugin based integration with Reolink cameras (see plugins). It is possible to get the recording of a specific timeframe via the Reolink API, those videos will be stitched together, and subtitles will be automatically created for the devices the user selected. In those subtitles all changes will be displayed. It is also possible to provide a custom delay between the \"recording time\" and the \"database time\".</p> in development <p>This core feature is still in an early state and may introduce breaking changes soon, currently there is no UI to check/configure the cameras.</p>"},{"location":"features/#plans","title":"Plans","text":"<p>ONVIF integration with discovery and recording of current live videos and subtitle integration. Integration of the ONVIF recording service to gather previously recorded videos.</p>"},{"location":"features/access-control/","title":"Access-Control","text":""},{"location":"features/access-control/#access-control","title":"Access Control","text":"<p>The KosmoS Platform has advanced access control which include access control based specific users, groups and scopes. A user that creates a Device will be the automatically added with admin access for the device.</p> <pre><code>graph TD\n   start(\"User2 tries&lt;br/&gt;to read status&lt;br/&gt;of Lamp17\") --&gt; checkLampExists{\"Lamp17 is a&lt;br&gt;known device\"}\n   checkLampExists --&gt;|No| notFound(\"return NotFound&lt;br&gt;(HTTP404)\"):::fail\n   checkLampExists --&gt;|Yes| checkReadScope{\"Device has&lt;br&gt;a read scope\"} --&gt;|No| returnStatus:::success\n   checkReadScope --&gt;|Yes| checkSystemAdmin{\"User is&lt;br&gt;system admin?\"} --&gt;|Yes| returnStatus\n   checkSystemAdmin --&gt;|No| checkUserScopeAdmin{\"User has&lt;br&gt;admin access&lt;br&gt;to scope\"}\n   checkUserScopeAdmin --&gt;|Yes| returnStatus(\"return status&lt;br&gt;of device\")\n   checkUserScopeAdmin --&gt;|No| checkUserScopeUser{\"User has&lt;br&gt;user access&lt;br&gt;to scope\"}\n   checkUserScopeUser --&gt;|Yes| returnStatus\n   checkUserScopeUser --&gt;|No| forbidden(\"return Forbidden&lt;br&gt;(HTTP403)\"):::fail\n    classDef default font-size:12px;\n    classDef success fill:#087f23,font-size:12px;\n    classDef fail fill:#f44336,font-size:12px;\n\n</code></pre> stable <p>This core feature is stable and heavily tested in production use.</p>"},{"location":"features/cameras/","title":"Cameras","text":""},{"location":"features/cameras/#camera-integration","title":"Camera Integration","text":"<p>We currently support plugin based integration with Reolink cameras (see plugins). It is possible to get the recording of a specific timeframe via the Reolink API, those videos will be stitched together, and subtitles will be automatically created for the devices the user selected. In those subtitles all changes will be displayed. It is also possible to provide a custom delay between the \"recording time\" and the \"database time\".</p> in development <p>This core feature is still in an early state and may introduce breaking changes soon, currently there is no UI to check/configure the cameras.</p>"},{"location":"features/cameras/#plans","title":"Plans","text":"<p>ONVIF integration with discovery and recording of current live videos and subtitle integration. Integration of the ONVIF recording service to gather previously recorded videos.</p>"},{"location":"features/json-schema/","title":"JSON-Schema","text":""},{"location":"features/json-schema/#json-schema","title":"JSON-Schema","text":"<p>Every Device/Entity can and should have an accompanying JSON-Schema that defines its properties and possible states. The platform validates every input against the JSON-Schema and guarantees that no invalid state can be set. Depending on the source of the request and the given parameters the platform can try to fix erroneous states by removing unwanted properties, changing the type of the parameter, or choosing the next value that would be in the valid range.</p> stable <p>This core feature is stable and heavily tested in production use.</p>"},{"location":"features/kree/","title":"KREE","text":""},{"location":"features/kree/#kosmos-rule-engine-editor-kree","title":"KosmoS Rule Engine Editor (KREE)","text":"<p>KREE is a block-based programming interface on top of the KosmoS Platform. It is based on https://developers.google.com/blockly and generates python code that will be launched directly from the KosmoS Platform</p> needs work <p>It is used in production already but still needs to be updated to the new python library. There also needs to be a wider variety of blocks to use, currently they are limited to generic blocks and some blocks based on the ConText use case.</p>"},{"location":"features/live-annotation/","title":"Live-Annotation","text":""},{"location":"features/live-annotation/#live-annotationstatus-website-optimized-for-obs","title":"Live Annotation/Status website optimized for OBS","text":"<p>A website is available to annotate OBS live with changes in user selected entities/devices. See Doc.</p> <p>Examples: Just monitor \"Light.Stehlampe\" <pre><code>http://localhost:18080/obs/live?username=xxx&amp;password=xxx&amp;uuid=light.stehlampe\n</code></pre> Monitor only the sensor.temp_living <pre><code>http://localhost:18080/obs/live?username=xxx&amp;password=xxx&amp;uuid=sensor.temp_living\n</code></pre> Monitor all Lights and Sensors available in HomeAssistant</p> <p><pre><code>http://localhost:18080/obs/live?username=xxx&amp;password=xxx&amp;uuid=light.*,sensor.*\n</code></pre> Everything <pre><code>http://localhost:18080/obs/live?username=xxx&amp;password=xxx&amp;uuid=*\n</code></pre></p> stable <p>This core feature is stable and heavily tested in production use.</p>"},{"location":"features/plugins/","title":"Plugins","text":""},{"location":"features/plugins/#plugins","title":"Plugins","text":"<p>The platform supports a plugin system based upon pf4j.</p> <p>The repository containing the plugin Interfaces can be found on github.com/kosmos-lab/kosmos-plugins. It currently is rather rudimentary and might change significant in a short amount of time.</p> stable <p>This core feature is stable and heavily tested in production use.</p>"},{"location":"features/plugins/#example-plugins","title":"Example Plugins","text":"<p>There are multiple example plugins available</p> <p>github.com/kosmos-lab/kosmos-plugin-web-chat</p> <p>github.com/kosmos-lab/kosmos-plugin-web-example</p>"},{"location":"features/plugins/#kiosk-plugin","title":"Kiosk Plugin","text":"<p>This plugin is used in the BAALL to control multiple browserconnected screens. It might also be useful for an example plugin using websockets and regular synchronous requests.</p> <p>github.com/kosmos-lab/kosmos-plugin-web-kiosk</p>"},{"location":"features/plugins/#weather-plugin","title":"Weather Plugin","text":"<p>This is a weather plugin using openweathermap.</p> <p>github.com/kosmos-lab/kosmos-plugin-weather</p>"},{"location":"features/plugins/#osc-plugin","title":"OSC Plugin","text":"<p>This is a plugin used for OpenSoundControl inside the BAALL.</p> <p>github.com/kosmos-lab/kosmos-plugin-web-osc</p>"},{"location":"features/plugins/#reolink-camera-plugin","title":"Reolink camera plugin","text":"<p>To have an example for the camera plugin api the previously integrated camera system for ReoLink was moved to a plugin, you can find it on github.com/kosmos-lab/kosmos-plugin-camera-reolink.</p> needs testing <p>This feature is currently only tested with the Reolink RLC-410-5MP and RLC-520-5MP, but should work for all reolink cameras</p>"},{"location":"features/smart-environment/","title":"Smart-Environment","text":""},{"location":"features/smart-environment/#integration-with-smart-environments","title":"Integration with Smart environments","text":"<p>The default integration with existing smart environments is done with Home Assistant. We selected Home Assistant for our default integration because it is considered as the current de facto standard for open-source smart environment controllers.</p> stable <p>This core feature is stable and heavily tested in production use.</p>"},{"location":"features/wizard-of-oz/","title":"Wizard-of-Oz","text":""},{"location":"features/wizard-of-oz/#kosmos-wizard-of-oz","title":"KosmoS Wizard-of-Oz","text":"<p>The KosmoS platform has a full featured Wizard-of-Oz interface that will be automatically populated but can be (and most likely should be) manually configured to support the features and parameters needed for a given Wizard-of-Oz experiment.</p> <pre><code>[\n{\n\"uuid\": \"ubiact1\",\n\"name\": \"UbiAct\",\n\"body\": [\n{\n\"type\": \"select_prob\",\n\"property2\": \"gesture\",\n\"property\": \"detected_gestures\",\n\"show\": true\n},\n{\n\"type\": \"_displayjson\",\n\"property\": \"detected_gestures\",\n\"show\": true\n},\n{\n\"type\": \"display\",\n\"property\": \"gesture\",\n\"show\": true\n},\n{\n\"type\": \"radio_json\",\n\"property\": \"detected_gestures\",\n\"prefix\": \"set detected_gestures to\",\n\"options\": [\n{\n\"name\": \"hand_closed\",\n\"prob\":  0.81\n},\n{\n\"name\": \"hand_opened\",\n\"prob\": 0.94\n},\n{\n\"name\": \"none\",\n\"prob\": 0.94\n}\n]\n}\n]\n}\n]\n</code></pre> stable <p>The Interface is tested and used in a production environment but lacks some user experience tweaks and fixes.</p>"},{"location":"install/","title":"Installation","text":""},{"location":"install/#docker-compose","title":"docker-compose","text":"<p>You can easily install the KosmoS Platform via docker-compose.</p>"},{"location":"install/#download-from-github","title":"download from github","text":"<p>The simplest way to get the full KosmoS Platform via docker-compose is to check out the latest version from github .</p>"},{"location":"install/#download-files","title":"download files","text":"checkout with gitdownload zip <pre><code>git clone https://github.com/kosmos-lab/kosmos-platform.git\n</code></pre> <p>download the latest zip from github  and extract it.</p> <pre><code>wget https://github.com/kosmos-lab/kosmos-platform/archive/refs/heads/main.zip\nunzip main.zip\n</code></pre>"},{"location":"install/#setup","title":"setup","text":"<p>Please change the paramaters of the docker-compose.yml to your likings. You should at least change the user accounts.</p>"},{"location":"install/#start-the-containers","title":"start the containers","text":"<pre><code>docker-compose up -d\n</code></pre>"},{"location":"install/#start-only-kosmos-platform-without-download","title":"Start only KosmoS Platform without download","text":"<p>If you dont want to checkout the project and do not want to use HomeAssistant you can create your own docker-compose.yml.</p>"},{"location":"install/#create-and-setup-docker-composeyml","title":"Create and setup docker-compose.yml","text":"full KosmoS Stackonly KosmoS platform, no HomeAssistant <pre><code>version: '3.4'\nservices:\nkosmos-home-assistant:\ncontainer_name: kosmos-home-assistant\nimage: homeassistant/home-assistant:stable\nvolumes:\n- ./ha-config:/config #the config folder, also contains the kosmos custom component, this NEEDS the checkout or github download containing the giving folder\nenvironment:\n- TZ=Europe/Berlin\n- PUID=1000\n- PGID=1000\nrestart: unless-stopped\nports:\n- \"8123:8123\"\nkosmos-platform:\ncontainer_name: kosmos-platform\nrestart: unless-stopped\nimage: ghcr.io/kosmos-lab/kosmos-platform\nvolumes:\n- ./config:/app/config #the config folder\n- ./db:/app/db # the folder of the database\n- ./plugins:/app/plugins # the plugins folder, drop kosmos plugin zips in here\n- ./rules:/app/rules/rules # the rules created with KREE will be saved here\n- ./oz/ui.json:/app/web/oz/assets/ui.json # the custom Wizard-of-Oz UI config will be saved in this file\nenvironment:\n- SETUPHA=1 # automatically setup home assistant, this implies the home assisstant instance is completely fresh\n- KOSMOS_HOST=kosmos-platform # the internal host for the platform\n- HA_HOST=kosmos-home-assistant # the host of the home assisstant instance to connect to\n- HA_USER=kosmos # the username we add to home asssisstant\n- HA_PASS=pass # the password to use for the added home assisstant user\n# the users to setup in the kosmos platform, here we create 3 users with simple passwords\n- USERS=[{\"username\":\"admin\",\"level\":100,\"password\":\"verysecret\"},{\"username\":\"user\",\"level\":1,\"password\":\"pass\"},{\"username\":\"user2\",\"level\":1,\"password\":\"pass\"}]\n- PUID=1000 # the userid to run the process\n- PGID=1000 # the groupid to run the process      \ndepends_on:\n- kosmos-home-assistant\nports:\n- \"18080:18080\"\n- \"1883:1883\"\n</code></pre> <pre><code>version: '3.4'\nservices:\nkosmos-platform:\ncontainer_name: kosmos-platform # the name of the container \nrestart: unless-stopped # automatically start on boot, and restart if container dies\nimage: ghcr.io/kosmos-lab/kosmos-platform # the kosmos platform image\nvolumes:\n- ./config:/app/config #the config folder\n- ./db:/app/db # the folder of the database\n- ./plugins:/app/plugins  # the plugins folder, drop kosmos plugin zips in here\n- ./rules:/app/rules/rules # the rules created with KREE will be saved here\n- ./oz/ui.json:/app/web/oz/assets/ui.json # the custom Wizard-of-Oz UI config will be saved in this file\nenvironment:\n# the users to setup, here we create 3 users with simple passwords\n- USERS=[{\"username\":\"admin\",\"level\":100,\"password\":\"verysecret\"},{\"username\":\"user\",\"level\":1,\"password\":\"pass\"},{\"username\":\"user2\",\"level\":1,\"password\":\"pass\"}]\n- PUID=1000 # the userid to run the process\n- PGID=1000 # the groupid to run the process\nports:\n- \"18080:18080\" # this is the default port of the webserver\n- \"1883:1883\" # this is the MQTT port\n</code></pre> <p>Please change the file to your liking (especially the user configuration). Important: if you want to change the HTTP port to another port please change both instances of 18080 here and also change the port in the configuration file (see config)</p>"},{"location":"install/#prepare-needed-files-and-folders","title":"prepare needed files and folders","text":"<p>Before you start it please make sure the folder structure exists.</p> <p><pre><code># create the empty directories, if needed\nmkdir -p rules config db oz\n# create an empty ui.json for the wizard of oz.\necho \"[]\" &gt; oz/ui.json\n</code></pre> This creates an empty custom UI for the Wizard and the needed empty folders to start the container.</p>"},{"location":"install/#start-the-container","title":"start the container","text":"<p>Afterwards you can start it with:</p> <pre><code>docker-compose up -d\n</code></pre>"},{"location":"install/#native-without-docker","title":"native without docker","text":""},{"location":"install/#download-from-github_1","title":"download from github","text":"checkout with gitdownload zip <pre><code>git clone https://github.com/kosmos-lab/kosmos-platform.git\n</code></pre> <p>download the latest zip from github  and extract it.</p> <pre><code>wget https://github.com/kosmos-lab/kosmos-platform/archive/refs/heads/main.zip\nunzip main.zip\n</code></pre>"},{"location":"install/#install-java-11-jdk14-recommended","title":"install java &gt;= 11 (jdk14 recommended)","text":"<p>To start the kosmos platform java 11 or newer is needed. Refer to java.com, oracle.com or your distribution on how to install jre or jdk on your system.</p>"},{"location":"install/#prepare-needed-files-and-folders_1","title":"prepare needed files and folders","text":"<p>Before you start it please make sure the folder structure exists.</p> <p><pre><code># create the empty directories, if needed\nmkdir -p rules config db oz\n# create an empty ui.json for the wizard of oz.\necho \"[]\" &gt; oz/ui.json\n</code></pre> This creates an empty custom UI for the Wizard and the needed empty folders to start the container.</p>"},{"location":"install/#optional-enable-execution-of-kree-scripts","title":"(optional) enable execution of KREE scripts","text":"<p>To be able to have a working KREE instance it is needed to have python3/python3-pip installed, and download the requirements for KREE.</p> command python3 (many linux systems)command python (windows some linux distros) <pre><code>python3 -m pip install -r rules/requirements.txt\n</code></pre> <pre><code>python -m pip install -r rules/requirements.txt\n</code></pre>"},{"location":"install/#start-the-application","title":"start the application","text":"default startup (config/config.json)custom configuration file <p><pre><code>java -jar target/kosmos.jar\n</code></pre> is equal to <pre><code>java -jar target/kosmos.jar -c config/config.json\n</code></pre></p> <pre><code>java -jar target/kosmos.jar -c myconfig.json\n</code></pre>"},{"location":"install/#kubernetes-example","title":"kubernetes example","text":"<p>This is an example for a kubernetes deployment, the kubernetes deployment does not setup home assistant automatically. Kubernetes is a rather complex issue and this is only to have a starting point if needed. We recommend using the docker-compose deployment. <pre><code>---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\nlabels:\nio.kompose.service: kosmos-platform\nname: kosmos-platform\nnamespace: kosmos\n\nspec:\nreplicas: 1\nselector:\nmatchLabels:\nio.kompose.service: kosmos-platform\nstrategy:\ntype: Recreate\ntemplate:\nmetadata:\nlabels:\nio.kompose.service: kosmos-platform\nspec:\ncontainers:\n- env:\n- name: PGID\nvalue: \"1000\"\n- name: PUID\nvalue: \"1000\"\n- name: SETUPHA\nvalue: \"0\"\n- name: USE_ROS2\nvalue: \"0\"\n- name: USERS\nvalue: '[{\"username\":\"ha\",\"password\":\"&lt;update&gt;\",\"level\":1},{\"username\":\"admin\",\"level\":100,\"password\":\"&lt;update&gt;\"}]'\n- name: OWM_KEY\nvalue: \"&lt;update&gt;\"\nimage: ghcr.io/kosmos-lab/kosmos-platform:0.8.7a\nimagePullPolicy: Always\nname: kosmos-platform\nports:\n- containerPort: 18080\n- containerPort: 1883\nresources: {}\nvolumeMounts:\n- mountPath: /app/config\nname: kosmos-platform-config\n- mountPath: /app/db\nname: kosmos-platform-db\n- mountPath: /app/plugins\nname: kosmos-platform-plugins\n- mountPath: /app/rules/rules\nname: kosmos-platform-rules\n- mountPath: /app/web/oz/assets/ui.json\nname: kosmos-platform-uijson\nrestartPolicy: Always\nvolumes:\n- hostPath:\npath: /gv0/kosmos/config\nname: kosmos-platform-config\n- hostPath:\npath: /gv0/kosmos/db\nname: kosmos-platform-db\n- hostPath:\npath: /gv0/kosmos/plugins\nname: kosmos-platform-plugins\n- hostPath:\npath: /gv0/kosmos/rules\nname: kosmos-platform-rules\n- hostPath:\npath: /gv0/kosmos/oz/ui.json\nname: kosmos-platform-uijson\nstatus: {}\n---\napiVersion: v1\nkind: Service\nmetadata:\ncreationTimestamp: null\nlabels:\nio.kompose.service: kosmos-platform\nname: kosmos-platform\nnamespace: kosmos\nspec:\ntype: LoadBalancer\nports:\n- name: \"18080\"\nport: 18080\ntargetPort: 18080\n- name: \"1883\"\nport: 1883\ntargetPort: 1883\nselector:\nio.kompose.service: kosmos-platform\nstatus:\nloadBalancer: {}\n---  apiVersion: networking.k8s.io/v1\nkind: Ingress\nmetadata:\nname: kosmos\nnamespace: kosmos\nspec:\nrules:\n- host: \"kosmos.&lt;update&gt;\"\nhttp:\npaths:\n- path: /\npathType: Prefix\nbackend:\nservice:\nname: kosmos-platform\nport:\nnumber: 18080\n</code></pre></p>"},{"location":"install/download/","title":"Download","text":"checkout with gitdownload zip <pre><code>git clone https://github.com/kosmos-lab/kosmos-platform.git\n</code></pre> <p>download the latest zip from github  and extract it.</p> <pre><code>wget https://github.com/kosmos-lab/kosmos-platform/archive/refs/heads/main.zip\nunzip main.zip\n</code></pre>"},{"location":"install/prepare_env/","title":"Prepare env","text":"<p>Before you start it please make sure the folder structure exists.</p> <p><pre><code># create the empty directories, if needed\nmkdir -p rules config db oz\n# create an empty ui.json for the wizard of oz.\necho \"[]\" &gt; oz/ui.json\n</code></pre> This creates an empty custom UI for the Wizard and the needed empty folders to start the container.</p>"},{"location":"plugins/","title":"Plugins","text":"<p>KosmoS Platform has support for pf4j  based plugins. Plugins can simply be dropped as a zip into the \"plugins\" folder.</p>"},{"location":"plugins/#camera-plugins","title":"Camera Plugins","text":"<p>Used to extend the camera functionality</p>"},{"location":"plugins/#reolink-camera-plugin","title":"Reolink camera plugin","text":"<p>This is the first camera plugin provided by the kosmos-lab consortium. It can be found on github .</p>"},{"location":"plugins/#web-plugins","title":"Web Plugins","text":""},{"location":"plugins/#web-example-plugin","title":"Web Example plugin","text":"<p>This is an example web plugin made to show how to develop a simple web plugin for the KosmoS platform. It can be found on github .</p>"},{"location":"usage/","title":"Usage","text":""},{"location":"usage/#user-interfaces","title":"User Interfaces","text":"<p>Info</p> <p>All of the links and URLs are tailored to local installation and the default port 18080. If you changed the port or the KosmoS Platform is not running on localhost you need to change the URL accordingly.</p>"},{"location":"usage/#kree-kosmos-rule-engine-editor","title":"KREE (Kosmos Rule Engine Editor)","text":"<p>The KREE frontend is available on http://localhost:18080/kree.</p>"},{"location":"usage/#wizard-of-oz","title":"Wizard of Oz","text":"<p>The interface for KosmoS Wizard of Oz is available on http://localhost:18080/oz.</p>"},{"location":"usage/#access-kosmos-platform-via-the-api","title":"Access KosmoS Platform via the API","text":""},{"location":"usage/#python-client","title":"python client","text":"<p>We provided a full python client, it is also available via pip. You can find further information in the repository on github .</p>"},{"location":"usage/#openapi","title":"openapi","text":"<p>The KosmoS platform was created with openapi in mind. You can get the openapi.yaml here.</p>"},{"location":"usage/#documentation","title":"Documentation","text":"<p>The documentation can be found here.</p>"},{"location":"usage/#asyncapi","title":"asyncapi","text":"<p>The KosmoS platform also has an asyncapi implementation  You can find the asyncapi.yaml here.</p>"},{"location":"usage/#documentation_1","title":"Documentation","text":"<p>The documentation can be found here.</p>"}]}